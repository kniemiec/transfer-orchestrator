buildscript {
    ext {
        protobufVersion = '3.17.3'
        protobufPluginVersion = '0.8.18'
        grpcVersion = '1.45.1'
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin")
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'java-library'
    id 'com.google.protobuf' version "${protobufPluginVersion}"
}

group = 'com.kniemiec.soft'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

apply plugin: 'org.springframework.boot'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // reactive
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

    // lombok
    implementation 'org.jetbrains:annotations:23.0.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // protobuf
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
//    implementation "io.grpc:grpc-services:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-netty:${grpcVersion}"
   compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5'

    // sleuth
    implementation 'org.springframework.cloud:spring-clout-starter-sleuth' {
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-sleuth-brave'
    }
    implementation 'org.springframework.cloud:pring-cloud-sleuth-otel-autoconfigure'
    implementation 'io.opentelemetry:pentelemetry-exporter-otlp-trace'

    // protobuf server
//    compileOnly('org.springframework.boot:spring-boot-starter')
//    compileOnly group: 'com.google.protobuf', name: 'protobuf-java', version: '3.10.0'

    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // wiremock
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner:3.1.1'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation "io.grpc:grpc-context:${grpcVersion}"

    // grpc stub
    testImplementation 'org.grpcmock:grpcmock-spring-boot:0.7.6'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    generatedFilesBaseDir = "$projectDir/src/generated"
    clean {
        delete generatedFilesBaseDir
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs = [ 'src/main/java', 'src/generated/main/grpc', 'src/generated/main/java']
        }
    }
    test {
        java {
            srcDirs = [ 'src/test/java']
        }
    }
}

test {
    useJUnitPlatform()
}
